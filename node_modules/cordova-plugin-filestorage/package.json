{
  "_args": [
    [
      {
        "raw": "https://github.com/DFranzen/cordova-FileStorage.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/DFranzen/cordova-FileStorage.git",
        "spec": "git+https://github.com/DFranzen/cordova-FileStorage.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:DFranzen/cordova-FileStorage.git",
          "sshUrl": "git+ssh://git@github.com/DFranzen/cordova-FileStorage.git",
          "httpsUrl": "git+https://github.com/DFranzen/cordova-FileStorage.git",
          "gitUrl": "git://github.com/DFranzen/cordova-FileStorage.git",
          "shortcut": "github:DFranzen/cordova-FileStorage",
          "directUrl": "https://raw.githubusercontent.com/DFranzen/cordova-FileStorage/master/package.json"
        }
      },
      "D:\\work10\\android\\catalog"
    ]
  ],
  "_from": "git+https://github.com/DFranzen/cordova-FileStorage.git",
  "_id": "cordova-plugin-filestorage@0.0.1",
  "_inCache": true,
  "_location": "/cordova-plugin-filestorage",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/DFranzen/cordova-FileStorage.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/DFranzen/cordova-FileStorage.git",
    "spec": "git+https://github.com/DFranzen/cordova-FileStorage.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:DFranzen/cordova-FileStorage.git",
      "sshUrl": "git+ssh://git@github.com/DFranzen/cordova-FileStorage.git",
      "httpsUrl": "git+https://github.com/DFranzen/cordova-FileStorage.git",
      "gitUrl": "git://github.com/DFranzen/cordova-FileStorage.git",
      "shortcut": "github:DFranzen/cordova-FileStorage",
      "directUrl": "https://raw.githubusercontent.com/DFranzen/cordova-FileStorage/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/DFranzen/cordova-FileStorage.git#b8ad80a0874b4bae2a9a0dcd7dfaee7517f8d5a3",
  "_shasum": "f654cb208df907e11281bfa9c6d08873c262b343",
  "_shrinkwrap": null,
  "_spec": "https://github.com/DFranzen/cordova-FileStorage.git",
  "_where": "D:\\work10\\android\\catalog",
  "author": {
    "name": "Daniel Franzen",
    "email": "daniel.franzen.blubb@gmail.com",
    "url": "https://dfranzen.github.io/"
  },
  "bugs": {
    "url": "https://github.com/DFranzen/cordova-FileStorage/issues"
  },
  "dependencies": {},
  "description": "FileStorage plugin for Cordova. Available for Android.",
  "devDependencies": {},
  "gitHead": "b8ad80a0874b4bae2a9a0dcd7dfaee7517f8d5a3",
  "homepage": "https://github.com/DFranzen/cordova-FileStorage#readme",
  "keywords": [
    "cordova",
    "phonegap",
    "cordova-android",
    "filestorage",
    "filepicker",
    "ecosystem:cordova"
  ],
  "license": "MIT",
  "name": "cordova-plugin-filestorage",
  "optionalDependencies": {},
  "readme": "Cordova FileStorage Plugin\r\n==========================\r\n\r\nThis plugin offers a wrapper around the handling with content and file URIs. It offers a functions for users to select a file on the device or dropbox and the read from it and write to it without the need to process the URIs used by android to describe files. \r\n\r\nInstall\r\n-------\r\n\r\nInstall with Cordova CLI\r\n\r\n```$ cordova plugin add https://github.com/DFranzen/cordova-FileStorage.git```\r\n\r\nJavaScript API\r\n--------------\r\n\r\nThe API is accessible via the global object `fileStorage`. After the `deviceready` event has been fired, the functions can be accessed as the fields of this object:\r\n```\r\ndocument.addEventListener(\"deviceready\", onDeviceReady, false);\r\nfunction onDeviceReady () {\r\n    console.log(fileStorage);\r\n}\r\n```\r\n\r\n__open__\r\n\r\nAfter this, a storage URI can be obtained from the user by calling\r\n```fileStorage.open(success, error);```\r\n\r\nIt displays a choice to the user to open a file from android's standard file choosing dialog or the Dropbox app. After the user chooses, one of the callback functions is called with the result\r\n\r\n```\r\nfunction success (uri) {\r\n    console.log(uri);\r\n}\r\n\r\nfunction error (errorMsg) {\r\n    console.log(errorMsg);\r\n}\r\n```\r\n\r\nThe uri returned to the ```success``` function is a string representation of either a ```file://``` or ```content://``` describing a local or remote content. This string has to be passed to the other API functions to describe the chosen file.\r\n\r\n__readFromUri__\r\nTo read the content of a file with the obtained uri call:\r\n```\r\nfileStorage.readFromUri(success, error, uri)\r\n```\r\nOne of the callback functions will be called with the result:\r\n```\r\nfunction success (data) {\r\n    console.log(data);\r\n}\r\n\r\nfunction error (errorMsg) {\r\n    console.log(errorMsg);\r\n}\r\n```\r\n\r\n__writeToUri__\r\nTo overwrite the content of a file with the obtained uri call:\r\n```\r\nfileStorage.writeToUri(success, error, uri, data)\r\n```\r\nThe parameter `data` is a string which will be the content of the file described by uri on success. One of the callback functions will be called with the result:\r\n```\r\nfunction success () {\r\n    console.log(\"written\");\r\n}\r\n\r\nfunction error (errorMsg) {\r\n    console.log(errorMsg);\r\n}\r\n```\r\n\r\n__appendToUri__\r\nTo append a string to the content of a file with the obtained uri call:\r\n```\r\nfileStorage.appendToUri(success, error, uri, data)\r\n```\r\nOne of the callback functions will be called with the result:\r\n```\r\nfunction success () {\r\n    console.log(\"written\");\r\n}\r\n\r\nfunction error (errorMsg) {\r\n    console.log(errorMsg);\r\n}\r\n```\r\n\r\nFile Handling\r\n-------------\r\n\r\nIf the runtime permission to read / write the file-system is not currently held by the app, all functions prompt the user to grant the permission and call the `error` callback with an appropriate error message. The API does *not* try to re-execute the operation after the permission has been granted.\r\n\r\nAll files which are read from and written to are opened if necessary and closed after the operation. No further handling is necessary.\r\n\r\n\r\nSupported Platforms:\r\n--------------------\r\n\r\nAndroid\r\n\r\nTested on\r\n---------\r\n\r\nCordova: 6.4.0\r\nPhoneGap: 6.4.2\r\n\r\nAndroid: 6.0.1",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/DFranzen/cordova-FileStorage.git"
  },
  "version": "0.0.1"
}
